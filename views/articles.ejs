<!DOCTYPE html>
<html>

<head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script src="https://raw.githubusercontent.com/daneden/animate.css/master/animate.css"></script>
</head>

<style>
    /* /////////////// Bootstrap boarder */

    /* .row {
        border: 1px solid red;
    }

    div[class^="col-"] {
        border: 1px solid green;
    } */

    /* /////////////// styling for the color indentifing the user */

    body,
    html {
        height: 100%;
    }

    #edit-message-text {
        font: bold;
    }

    .bg {
        /* The image used */
        /* background-image: url("https://visionshare.org/wp-content/uploads/alpha-bg.png"); */
        /* Half height */
        height: 10%;
        /* Center and scale the image nicely */
        background-position: bottom;
        background-repeat: no-repeat;
        background-size: cover;
    }
    

  




    .likeNumber { margin-left: 1px; }
    .likeButton {
        height: 10px;
        width: 10px;
        margin-bottom: 3px;
        margin-left: 5px;
    }
    .likeButton:hover {
        height: 15px;
        width: 15px;
        margin-bottom: 3px;
        margin-left: 2px;    
    }



    .deleteButton {
        height: 12px;
        width: 13px;
        margin-bottom: 3px;
        margin-left: 4px;
    }
    .deleteButton:hover {
        height: 20px;
        width: 20px;
        margin-bottom: 3px;
        margin-left: 1px;
    }




    .editButton {
        height: 8px;
        width: 8px;
        margin-bottom: 3px;
        margin-left: 12px;
        margin-right: 6px;

    }
    .editButton:hover {
        height: 15px;
        width: 15px;
        margin-bottom: 3px;
        margin-left: 8px;
        margin-right: 6px;

    }



    .poopButton {
        height: 11px;
        width: 11px;
        margin-bottom: 1px;
        margin-left: 5px;
    }
    .poopButton:hover {
        height: 18px;
        width: 18px;
        margin-bottom: 1px;
        margin-left: 2px;
    }





    .likeButtonStat {
        height: 15px;
        width: 15px;
        margin-bottom: 3px;
        margin-left: 1px;
    }

    .poopButtonStat {
        height: 18px;
        width: 18px;
        margin-bottom: 1px;
        /* margin-left: 4px; */
        /* margin-right: 1px; */

    }






    .circle {
        height: 10px;
        width: 10px;
        border-radius: 20px;
        display: inline-block;
        margin-right: 5px;
        margin-left: 5px;
    }


    .circleStats {
        height: 10px;
        width: 10px;
        border-radius: 20px;
        display: inline-block;
        margin-right: 5px;
        /* margin-left: 5px; */
    }




    .userOnlineColor {
        height: 10px;
        width: 10px;
        border-radius: 5px;
        display: inline-block;
        margin-right: 5px;
        /* margin-left: 5px; */
    }


    .logout {
        width: 12px;
        /* border-radius: 50px; */
        /* float: center; */
        /* display: inline-block; */
        margin-bottom: 2px;
        /* margin-left: 1px; */
        /* margin-right: 2px; */
    }
 




    .logo {
        width: 40px;
        height: 40px;
        margin-bottom: 5px;
        margin: auto;
        
        
    }

    .welcomeName {
        font-weight: bold;
        display: inline-block;
        text-align: left;
    }

    .likesAndPoopsNumber {
        font-weight: bold;
        display: inline-block;
        /* margin: auto; */
        text-align: center;
    }

    .sep {
        /* border-top: 1px solid rgb(240, 240, 240); */
        right: -50px;
        height: 1px;

        background-image: -webkit-gradient(linear, 0 0, 100% 0, from(rgb(192, 192, 192)), to(transparent));
        background-image: -webkit-linear-gradient(right, rgb(233, 233, 233), transparent);
        background-image: -moz-linear-gradient(left, rgb(243, 243, 243), transparent);
        background-image: -o-linear-gradient(left, rgb(243, 243, 243), transparent);
    }
</style>

<body>
    <div class="container mt-3">
        <!-- //////////////////////////////////////////// logo  -->
        
       

        <div class="col-12 col-sm-2 mb-2 mx-auto text-center">
            <img src="https://media.licdn.com/dms/image/C4E0BAQGxbiQFQ7a1EA/company-logo_400_400/0?e=1557964800&v=beta&t=OwGqgRsLn89yns4QG1XZYJVnLGqdwkcaPlaKlqzU5Yc
                    " class="logo" alt="logo">
        </div>
        <div class="row bg">
            <div class="col-12 mb-2 mt-1">
                <!-- //////////////////////////////////////////// Welcoming text  -->
                <a class="button" href="/logout">
                    <img src="https://www.shareicon.net/download/2015/10/17/657490_arrow_512x512.png" class="logout">
                </a>
                <b>
                    <small>Bonjour </small>
                    <small id="welcome-name" class="welcomeName"></small>
                    <small> !
                    </small>
                </b>
                <!-- //////////////////////////////////////////// Color bar  -->
                <div id="color-adj" class="col-12 mx-auto mt-1 p-1 rounded"></div>
            </div>
            <div class="col-12 col-sm-8 col-md-9 mb-2 mx-auto">
                <!-- //////////////////////////////////////////// Input and submit -->
                <input type="text" id="post-content-input" rows="6" class="form-control text-center"
                    placeholder="new message... "></input>
            </div>
            <div class="col-12 col-sm-4 col-md-3 mb-2 mx-auto">
                <button onclick="postArticle()" id="myBtn" class="btn btn-dark btn-block">Post</button>
            </div>
        </div>
        <div class="row">
            <div class="col-12 col-sm-8 col-md-9">
                <!-- ////////////////////////////////////////// All articles -->
                <p class="font-weight-normal" id="get-content-result-all"></p>
                <!-- //////////////////////////////////////////////  Users online -->
            </div>
            <div class="col-12 col-sm-4 col-md-3 mx-auto">
                <div class="row">
                    <div class="col-12">
                        <div class="row">
                            <div class="col-8 col-sm-7 mx-auto">
                                <span><small><small>ONLINE:</small></span></small>
                            </div>
                            <div class="col-4 col-sm-5 mx-auto text-center">
                                <img src='https://cdn4.iconfinder.com/data/icons/like-18/32/459-01-512.png'
                                    class='likeButtonStat'>
                                <img src='/images/poop-icon-png-24.jpg' class='poopButtonStat'>
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="row">
                            <div class="col-8 col-sm-7 mx-auto">
                                <small id="usersOnline" class="welcomeName"></small>
                            </div>
                            <div class="col-4 col-sm-5 mx-auto text-center">
                                <small id="likesAndPoopsOnline" class="likesAndPoopsNumber"></small>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div id="modal-window"></div>

    <!-- <button type="button" class="btn btn-dark btn-sm" data-toggle="modal" data-target="" data-whatever="@getbootstrap">Open modal for @getbootstrap</button> -->

    <div class="modal fade" id="exampleModal" role="dialog">

        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h7 class="modal-title"><small>Edit:</small></h7>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="form-group">

                        </div>
                        <div class="form-group">

                            <textarea class="form-control" id="edit-message-text">



                </textarea>

                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-light" data-dismiss="modal">Cancel</button>
                    <span onclick="updateArticle()" class="btn btn-sm btn-dark" data-dismiss="modal">Confirm</span>
                </div>
            </div>
        </div>
    </div>



</body>




<script>

    var user = null;


    var input = document.getElementById("post-content-input");
    input.addEventListener("keyup", function (event) {
        if (event.keyCode === 13) {
            event.preventDefault();
            document.getElementById("myBtn").click();
        }
    });


    function getConnectedUsers() {
        axios.get('/user/connected')
            .then(function (response) {

                document.getElementById("usersOnline").innerHTML = "";
                document.getElementById("likesAndPoopsOnline").innerHTML = "";

                // console.log(response.data);
                for (var i = response.data.length - 1; i >= 0; i--) {
                    var onlineName = response.data[i].username;
                    var color = response.data[i].color;
                    var likes = response.data[i].likesCount
                    var poops = response.data[i].poopsCount

                    // The biggest pooper.
                    // var poopStat = []                   
                    // poopStat = {"name": onlineName,"color": color,"poops": poops};
                    // console.log(poopStat);

                    var likesAndPoops = "<small>" + likes + " - " + poops + "     "
                        + "</small><div class='sep'></div>";
                    document.getElementById("likesAndPoopsOnline").innerHTML += likesAndPoops;

                    var colorAndName = "<div class='circleStats' style='background-color:"
                        + color + "'></div><small><b>" + "<b>"
                        + onlineName + "</b>"
                        + "</small><div class='sep'></div>";

                    document.getElementById("usersOnline").innerHTML += colorAndName;
                }

                setTimeout(getConnectedUsers, 1000);
            })
            .catch(function (error) {
                console.log(error);
            });
    };
    getConnectedUsers();


    function getColor() {
        axios.get('/user/color')
            .then(function (response) {
                var element = document.getElementById("color-adj");
                element.style.backgroundColor = response.data;
            })
            .catch(function (error) {
                console.log(error);
            });
    };
    getColor();


    function getUserNameForTheTitle() {
        axios.get('/user')
            .then(function (response) {
                document.getElementById("welcome-name").innerHTML += response.data.username;
            })
            .catch(function (error) {
                console.log(error);
            });
    };
    getUserNameForTheTitle();


    function like(articleId) {
        var link = "/articles/like/" + articleId;

        axios.get(link)
            .then(function (response) {
                if (!response.data) return;

                // Refresh the articles on the page
                getAllArticles();
                // getUserArticles();
            })
            .catch(function (error) {
                console.log(error);
            });
    };


    function poop(articleId) {
        var link = "/articles/poop/" + articleId;

        axios.get(link)
            .then(function (response) {
                if (!response.data) return;

                // Refresh the articles on the page
                getAllArticles();
                // getUserArticles();
            })
            .catch(function (error) {
                console.log(error);
            });
    };


    function deleteById(articleId) {
        var link = "/articles/delete/" + articleId;

        axios.get(link)
            .then(function (response) {
                if (!response.data) return;

                // Refresh the articles on the page
                getAllArticles();
                // getUserArticles();
            })
            .catch(function (error) {
                console.log(error);
            });
    };


    // function editArticle(articleId) {

    //     var content = document.getElementById("post-content-input").value;
    //     var data = {
    //         "content": content
    //     };

    //     axios.post("/articles/edit", articleId)
    //         .then(function (response) {
    //             // Refresh the articles on the page
    //             // getAllArticles();
    //             // getUserArticles();

    //             // Empty input 
    //             document.getElementById("edit-message-text").value = response.data;
    //         })
    //         .catch(function (error) {
    //             console.log(error);
    //         });
    // };

    var articleIdToEdit222 = "";

    function editById(articleId) {
        var link = "/articles/edit/" + articleId;

        axios.get(link)
            .then(function (response) {
                if (!response.data) return;


                // console.log(response.data);
                articleIdToEdit222 = response.data;
                console.log("_________" + articleIdToEdit222);
                document.getElementById("edit-message-text").value = response.data.content;
                // Refresh the articles on the page
                getAllArticles();

            })
            .catch(function (error) {
                console.log(error);
            });
    };


    function updateArticle() {
        id = articleIdToEdit222._id
        var content = document.getElementById("edit-message-text").value;
        var data = {
            "articleIdtoEdit": id,
            "content": content
        };
        console.log(data);
        axios.post("/articles/updateArticle", data)
            .then(function (response) {
                // Refresh the articles on the page
                getAllArticles();
                // getUserArticles();

                // Empty input 
                document.getElementById("post-content-input").value = "";
            })
            .catch(function (error) {
                console.log(error);
            });
    };



    // function displayArticles(articles, articlesLocation) {
    //     document.getElementById(articlesLocation).innerHTML = "";
    //     for (var i = articles.length - 1; i >= 0; i--) {
    //         var articleOwner = articles[i].articleOwner;
    //         var date = new Date(articles[i].datePosted).toLocaleString();
    //         var content = articles[i].content;
    //         var color = articleOwner.color;
    //         var userName = articleOwner.username;
    //         var articleId = articles[i]._id;

    //         var likes = 0;
    //         if (articles[i].likersIds) likes = articles[i].likersIds.length;

    //         var poops = 0;
    //         if (articles[i].poopsIds) poops = articles[i].poopsIds.length;

    //         var result = "<small>" +
    //             "<small>" + date + "</small>"
    //             // + "<span class='likeNumber'>" + likes + "</span>"
    //             + "<div class='circle' style='background-color:"
    //             + color + "'></div><small><b>"
    //             + userName + "</b>: </small>"
    //             + content + "<span onclick=\"like('" + articleId + "')\">"
    //             + " <img src='https://cdn4.iconfinder.com/data/icons/like-18/32/459-01-512.png' class='likeButton'><span class='likeNumber'>" + likes + "</span></span>"
    //             + "<span onclick=\"poop('" + articleId + "')\">"
    //             + " <img src='/images/poop-icon-png-24.jpg' class='poopButton'><span class='poopNumber'>" + poops + "</span></span>"
    //             + "</small><div class='sep'></div>";

    //         document.getElementById(articlesLocation).innerHTML += result;
    //     }
    // };



    function displayArticles(articles, articlesLocation) {
        document.getElementById(articlesLocation).innerHTML = "";
        for (var i = articles.length - 1; i >= 0; i--) {
            var articleOwner = articles[i].articleOwner;
            var date = new Date(articles[i].datePosted).toLocaleString();
            var content = articles[i].content;
            var contentToEdit = articles[i].content;

            var color = articleOwner.color;
            var userName = articleOwner.username;
            var articleId = articles[i]._id;

            var likes = 0;
            if (articles[i].likersIds) likes = articles[i].likersIds.length;

            var poops = 0;
            if (articles[i].poopsIds) poops = articles[i].poopsIds.length;

            var deleteBtn = "";
            if (user && user._id === articles[i].ownerId) deleteBtn = "<span onclick=\"deleteById('" + articleId + "')\"><img src='https://www.freeiconspng.com/uploads/black-x-png-27.png' class='deleteButton'></span></span>";

            // var editButton = "";
            // if (user && user._id === articles[i].ownerId) editButton = "<span onclick=\"edit('" + articleId + "')\"><img src='http://www.clker.com/cliparts/Q/e/P/J/C/t/pencil-md.png' class='editButton'></span></span>";









            var editButton = "";
            if (user && user._id === articles[i].ownerId) editButton = "<span onclick=\"editById('" + articleId + "')\" data-target=\"#exampleModal\" data-toggle=\"modal\"><img src='http://www.clker.com/cliparts/Q/e/P/J/C/t/pencil-md.png' class='editButton'></span></span>";

            var likeButton = "";
            if (user && user._id !== articles[i].ownerId) likeButton = "<span onclick=\"like('" + articleId + "')\"><img src='https://cdn4.iconfinder.com/data/icons/like-18/32/459-01-512.png' class='likeButton'><span class='likeNumber'>" + likes + "</span></span>";

            var poopButton = "";
            if (user && user._id !== articles[i].ownerId) poopButton = "<span onclick=\"poop('" + articleId + "')\"><img src='/images/poop-icon-png-24.jpg' class='poopButton'><span class='poopNumber'>" + poops + "</span></span>";


            var result = "<small>"
                + "<small>" + deleteBtn + editButton + likeButton + poopButton
                // + date
                + "</small>"
                + "<div class='circle' style='background-color:"
                + color + "'></div><small><b>"
                + userName + "</b>: </small>"
                + content
                + "</small><div class='sep'></div>";

            document.getElementById(articlesLocation).innerHTML += result;
        }
    };



    // function PassThePostToEdit(currentContent, button) {
    //     var modalData =
    //         `<div class="modal fade" id="exampleModal" role="dialog">
    //     <div class="modal-dialog">
    //     <div class="modal-content">
    //         <div class="modal-header">
    //         <h7 class="modal-title"><small>Edit:</small></h7>                               
    //         <button type="button" class="close" data-dismiss="modal" aria-label="Close">
    //             <span aria-hidden="true">&times;</span>
    //         </button>
    //         </div>
    //         <div class="modal-body">
    //         <form>
    //             <div class="form-group">
    //             <!-- <label for="recipient-name" class="col-form-label">Recipient:</label>
    //             <input type="text" class="form-control" id="recipient-name"> -->
    //             </div>
    //             <div class="form-group">
    //             <!-- <label for="message-text" class="col-form-label"><small>message time:</small></label> -->
    //             <textarea class="form-control" id="edit-message-text">`+ currentContent + `</textarea>
    //             </div>
    //         </form>
    //         </div>
    //         <div class="modal-footer">
    //         <button type="button" class="btn btn-sm btn-light" data-dismiss="modal">Cancel</button>
    //         <button type="button" class="btn btn-sm btn-dark">Confirm</button>
    //         </div>
    //     </div>
    //     </div>
    //     </div>
    //     `;

    //     document.getElementById("modal-window").innerHTML = modalData;

    //     return button;
    // };





    function getUser() {
        axios.get('/user')
            .then(function (response) {
                user = response.data
                return response.data;
                // document.getElementById("welcome-name").innerHTML += response.data.username;
                // console.log(response.data)
            })
            .catch(function (error) {
                console.log(error);
            });
    };
    getUser();



    function getUserArticles() {
        axios.get('/articles/user')
            .then(function (response) {
                if (!response.data) return;
                var data = response.data
                // console.log("userArticles")
                // console.log(data);
                return data;
            })
            .catch(function (error) {
                console.log(error);
            });
    };
    getUserArticles();



    // function getUserArticlesAndFetchInHTML() {
    //     axios.get('/articles/user')
    //         .then(function (response) {
    //             if (!response.data) return;
    //             return displayArticles(response.data, "get-content-result-individual");
    //         })
    //         .catch(function (error) {
    //             console.log(error);
    //         });
    // };
    // getUserArticlesAndFetchInHTML();


    function getAllArticles(retrigger) {
        axios.get("/articles/all")
            .then(function (response) {
                if (retrigger) setTimeout(function () { getAllArticles(true) }, 1000);

                // getAllArticles(true)
                if (!response.data) return;
                // console.log(response.data);
                return displayArticles(response.data, "get-content-result-all");
            })
            .catch(function (error) {
                console.log(error);
            });
    };
    getAllArticles(true);
    // getAllArticles();




    function postArticle() {
        var content = document.getElementById("post-content-input").value;
        var data = {
            "content": content
        };
        axios.post("/articles", data)
            .then(function (response) {
                // Refresh the articles on the page
                getAllArticles();
                // getUserArticles();

                // Empty input 
                document.getElementById("post-content-input").value = "";
            })
            .catch(function (error) {
                console.log(error);
            });
    };





</script>

</html>
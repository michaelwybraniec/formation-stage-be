<!DOCTYPE html>
<html>

<head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
</head>

<style>
    /* /////////////// Bootstrap boarder */

    /* .row {
        border: 1px solid red;
    }

    div[class^="col-"] {
        border: 1px solid green;
    } */

    /* /////////////// styling for the color indentifing the user */

    body,
    html {
        height: 100%;
    }

    .bg {
        /* The image used */
        background-image: url("https://mdbootstrap.com/img/Photos/Horizontal/Nature/full page/img(11).jpg");
        /* Half height */
        height: 50%;
        /* Center and scale the image nicely */
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;
    }

    .likeNumber {
        margin-left: 1px;

    }

    .likeButton {
        height: 12px;
        width: 12px;
        margin-bottom: 3px;
        margin-left: 5px;
    }

    .poopButton {
        height: 13px;
        width: 13px;
        margin-bottom: 1px;
        margin-left: 5px;
    }

    .circle {
        height: 10px;
        width: 10px;
        border-radius: 20px;
        display: inline-block;
        margin-right: 5px;
        margin-left: 5px;
    }

    .userOnlineColor {
        height: 10px;
        width: 10px;
        border-radius: 5px;
        display: inline-block;
        margin-right: 5px;
        /* margin-left: 5px; */
    }

    .logout {
        width: 12px;
        /* border-radius: 50px; */
        /* float: center; */
        display: inline-block;
        margin-bottom: 2px;
        /* margin-left: 1px; */
        /* margin-right: 2px; */
    }

    .logo {
        width: 40px;
        height: 40px;
        margin-bottom: 5px;
        margin: auto;
    }

    .welcomeName {
        font-weight: bold;
    }

    .sep {
        /* border-top: 1px solid rgb(240, 240, 240); */
        right: -50px;
        height: 1px;
        background-image: -webkit-gradient(linear, 0 0, 100% 0, from(rgb(150, 150, 150)), to(transparent));
        background-image: -webkit-linear-gradient(left, rgb(206, 206, 206), transparent);
        background-image: -moz-linear-gradient(left, rgb(219, 219, 219), transparent);
        background-image: -o-linear-gradient(left, rgb(216, 216, 216), transparent);
    }
</style>

<body>

    <div class="container mt-3">
        <!-- //////////////////////////////////////////// logo  -->
        <div class="col-12 col-sm-2 mb-2 mx-auto text-center">
            <img src="https://media.licdn.com/dms/image/C4E0BAQGxbiQFQ7a1EA/company-logo_400_400/0?e=1557964800&v=beta&t=OwGqgRsLn89yns4QG1XZYJVnLGqdwkcaPlaKlqzU5Yc
                    " class="logo" alt="logo">
        </div>
        <div class="row bg">
            <div class="col-12 mb-2 mt-1">
                <!-- //////////////////////////////////////////// Welcoming text  -->
                <a class="button" href="/logout">
                    <img src="https://www.shareicon.net/download/2015/10/17/657490_arrow_512x512.png" class="logout">
                </a>
                <b>
                    <small>Bonjour </small>
                    <small id="welcome-name" class="welcomeName"></small>
                    <small> !
                    </small>
                </b>
                <!-- //////////////////////////////////////////// Color bar  -->
                <div id="color-adj" class="col-12 mx-auto mt-1 p-1 rounded"></div>
            </div>
            <div class="col-12 col-sm-8 col-md-9 mb-2 mx-auto">
                <!-- //////////////////////////////////////////// Input and submit -->
                <input type="text" id="post-content-input" rows="6" class="form-control text-center"
                    placeholder="new message... "></input>
            </div>
            <div class="col-12 col-sm-4 col-md-3 mb-2 mx-auto">
                <button onclick="postArticle()" id="myBtn" class="btn btn-dark btn-block">Post</button>
            </div>
        </div>
        <div class="row">
            <div class="col-12 col-sm-8 col-md-9">
                <!-- ////////////////////////////////////////// All articles -->
                <p class="font-weight-normal" id="get-content-result-all"></p>
                <!-- //////////////////////////////////////////////  Users online -->
            </div>
            <div class="col-12 col-sm-4 col-md-3 mx-auto">
                <small><small>ONLINE:</small>
                    <div class='sep'></div>
                </small>
                <!-- <div id="users-online-color" class="userOnlineColor"></div>
                <small id="userOnlineName" class="welcomeName"></small> -->
                <small id="usersOnline" class="welcomeName"></small>
            </div>
        </div>
    </div>
</body>

<script>

    var input = document.getElementById("post-content-input");
    input.addEventListener("keyup", function (event) {
        if (event.keyCode === 13) {
            event.preventDefault();
            document.getElementById("myBtn").click();
        }
    });


    function getConectedUsers() {
        axios.get('/user/connected')
            .then(function (response) {

                document.getElementById("usersOnline").innerHTML = "";

                for (var i = response.data.length - 1; i >= 0; i--) {
                    var onlineName = response.data[i].username;
                    var color = response.data[i].color;

                    var result = "<div class='circle' style='background-color:"
                        + color + "'></div><small><b>" + "<b>"
                        + onlineName + "</b></small><div class='sep'></div>";

                    document.getElementById("usersOnline").innerHTML += result;
                }
            })
            .catch(function (error) {
                console.log(error);
            });
    };
    setInterval(function () { getConectedUsers() }, 1000);


    function getColor() {
        axios.get('/user/color')
            .then(function (response) {
                var element = document.getElementById("color-adj");
                element.style.backgroundColor = response.data;
            })
            .catch(function (error) {
                console.log(error);
            });
    };
    getColor();


    function getUserNameForTheTitle() {
        axios.get('/user')
            .then(function (response) {
                document.getElementById("welcome-name").innerHTML += response.data.username;
            })
            .catch(function (error) {
                console.log(error);
            });
    };
    getUserNameForTheTitle();


    function like(articleId) {
        var link = "/articles/like/" + articleId;

        axios.get(link)
            .then(function (response) {
                if (!response.data) return;

                // Refresh the articles on the page
                getAllArticles();
                // getUserArticles();
            })
            .catch(function (error) {
                console.log(error);
            });
    };


    function poop(articleId) {
        var link = "/articles/poop/" + articleId;

        axios.get(link)
            .then(function (response) {
                if (!response.data) return;

                // Refresh the articles on the page
                getAllArticles();
                // getUserArticles();
            })
            .catch(function (error) {
                console.log(error);
            });
    };


    function displayArticles(articles, articlesLocation) {
        document.getElementById(articlesLocation).innerHTML = "";
        for (var i = articles.length - 1; i >= 0; i--) {
            var articleOwner = articles[i].articleOwner;
            var date = new Date(articles[i].datePosted).toLocaleString();
            var content = articles[i].content;
            var color = articleOwner.color;
            var userName = articleOwner.username;
            var articleId = articles[i]._id;

            var likes = 0;
            if (articles[i].likersIds) likes = articles[i].likersIds.length;

            var poops = 0;
            if (articles[i].poopsIds) poops = articles[i].poopsIds.length;

            var result = "<small>" +
                "<small>" + date + "</small>"
                // + "<span class='likeNumber'>" + likes + "</span>"
                + "<div class='circle' style='background-color:"
                + color + "'></div><small><b>"
                + userName + "</b>: </small>"
                + content + "<span onclick=\"like('" + articleId + "')\">"
                + " <img src='https://cdn4.iconfinder.com/data/icons/like-18/32/459-01-512.png' class='likeButton'><span class='likeNumber'>" + likes + "</span></span>"
                + "<span onclick=\"poop('" + articleId + "')\">"
                + " <img src='/images/poop-icon-png-24.jpg' class='poopButton'><span class='poopNumber'>" + poops + "</span></span>"
                + "</small><div class='sep'></div>";

            document.getElementById(articlesLocation).innerHTML += result;
        }
    };


    function getAllArticles() {
        axios.get("/articles/all")
            .then(function (response) {
                if (!response.data) return;
                return displayArticles(response.data, "get-content-result-all");
            })
            .catch(function (error) {
                console.log(error);
            });
    };
    setInterval(function () { getAllArticles() }, 1000);


    // function getUserArticles() {
    //     axios.get('/articles/user')
    //         .then(function (response) {
    //             if (!response.data) return;
    //             return displayArticles(response.data, "get-content-result-individual");
    //         })
    //         .catch(function (error) {
    //             console.log(error);
    //         });
    // };
    // getUserArticles();


    function postArticle() {
        var content = document.getElementById("post-content-input").value;
        var data = {
            "content": content
        };
        axios.post("/articles", data)
            .then(function (response) {
                // Refresh the articles on the page
                getAllArticles();
                // getUserArticles();

                // Empty input 
                document.getElementById("post-content-input").value = "";
            })
            .catch(function (error) {
                console.log(error);
            });
    };


</script>

</html>